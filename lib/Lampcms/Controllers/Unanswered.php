<?php
/**
 *
 * License, TERMS and CONDITIONS
 *
 * This software is lisensed under the GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * Please read the license here : http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * ATTRIBUTION REQUIRED
 * 4. All web pages generated by the use of this software, or at least
 * 	  the page that lists the recent questions (usually home page) must include
 *    a link to the http://www.lampcms.com and text of the link must indicate that
 *    the website's Questions/Answers functionality is powered by lampcms.com
 *    An example of acceptable link would be "Powered by <a href="http://www.lampcms.com">LampCMS</a>"
 *    The location of the link is not important, it can be in the footer of the page
 *    but it must not be hidden by style attibutes
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This product includes GeoLite data created by MaxMind,
 *  available from http://www.maxmind.com/
 *
 *
 * @author     Dmitri Snytkine <cms@lampcms.com>
 * @copyright  2005-2011 (or current year) ExamNotes.net inc.
 * @license    http://www.gnu.org/licenses/lgpl-3.0.txt GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * @link       http://www.lampcms.com   Lampcms.com project
 * @version    Release: @package_version@
 *
 *
 */


namespace Lampcms\Controllers;

use Lampcms\WebPage;
use Lampcms\Paginator;
use Lampcms\Template\Urhere;

/**
 * Controller to view unanswered questions
 * pages. Unanswered pages could show:
 * no accepted answer, no answer at all,
 * tagged unanswered and 'my unanswered'
 *
 * In any case the 'tags' block will always be showing
 * "unanswered" tags
 *
 * @author Dmitri Snytkine
 *
 */
class Unanswered extends Viewquestions
{

	/**
	 * Indicates the current tab
	 *
	 * @var string
	 */
	protected $qtab = 'unanswered';

	protected $pagerPath = '/unanswered';

	/**
	 * Select items according to conditions passed in GET
	 * Conditions can be == 'unanswered', 'hot', 'recent' (default)
	 */
	protected function getCursor(){
		$aFields = array();

		$cond = $this->oRequest->get('cond', 's', 'recent');
		d('cond: '.$cond);

		/**
		 * Default sort is by timestamp Descending
		 * meaning most recent should be on top
		 *
		 */
		$sort = array('i_ts' => -1);
		/**
		 * @todo translate this title later
		 *
		 */
		$this->title = 'Questions with no accepted answer';

		switch($cond){


			/**
			 * Most answers/comments/views
			 * There is an activity counter
			 * 1 point per view, 10 point per comment,
			 * 50 points per answer
			 * but still limit to 30 days
			 * Cache Tags for 1 day only
			 * uncache onQuestionVote, onQuestionComment
			 */
			case 'noanswer':
				$this->title = 'Questions with no answers';
				$this->pagerPath = '/unanswered/noanswers';
				$where = array('i_ans' => 0);
				$this->typeDiv = Urhere::factory($this->oRegistry)->get('tplQuntypes', 'noanswer');
				break;

			case 'tagged':
				$this->pagerPath = '/unanswered/tagged/'.$this->oRequest['tags'];
				$where = array('i_sel_ans' => null, 'a_tags' => array('$all' => $this->getTags()) ); //'i_sel_ans' => null,
				$this->typeDiv = Urhere::factory($this->oRegistry)->get('tplQuntypes', 'newest');
				/**
				 * @todo
				 * translate 'Tagged'
				 *
				 * @var unknown_type
				 */
				$this->counterTaggedText = \tplCounterblocksub::parse(array(str_replace(' ', ' + ', $this->oRequest['tags']), 'Tagged'), false);
				break;

				/**
				 * Default is all questions
				 * with no selected answer!
				 */
			default:
				$where = array('i_sel_ans' => null);
				$this->typeDiv = Urhere::factory($this->oRegistry)->get('tplQuntypes', 'newest');
		}


		$this->oCursor = $this->oRegistry->Mongo->getCollection('QUESTIONS')->find($where);
		$this->count = $this->oCursor->count(true);
		d('$this->oCursor: '.gettype($this->oCursor).' $this->count: '.$this->count);
		$this->oCursor->sort($sort);

		return $this;
	}

	/**
	 * Extract value of tags from
	 * query string and turn into array
	 *
	 * @return array of tags passed in query string
	 */
	protected function getTags(){
		$s = $this->oRequest['tags'];

		if(empty($s)){
			return array();
		}

		$aTags = explode(' ', $s);
		d('aTags: '.print_r($aTags, 1));

		return $aTags;
	}

	/**
	 * @todo translate word "Unanswered"
	 *
	 * @see wwwViewquestions::makeRecentTags()
	 */
	protected function makeRecentTags(){

		$s = $this->oRegistry->Cache->qunanswered;
		$tags = \tplBoxrecent::parse(array('tags' => $s, 'title' => 'Unanswered tags'));
		$this->aPageVars['tags'] = $tags;

		return $this;
	}

	protected function makeCounterBlock(){
		$this->aPageVars['topRight'] = \tplCounterblock::parse(array($this->count, $this->title, $this->counterTaggedText), false);

		return $this;
	}
}
