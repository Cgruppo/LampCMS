<?php
/**
 *
 * License, TERMS and CONDITIONS
 *
 * This software is lisensed under the GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * Please read the license here : http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * ATTRIBUTION REQUIRED
 * 4. All web pages generated by the use of this software, or at least
 * 	  the page that lists the recent questions (usually home page) must include
 *    a link to the http://www.lampcms.com and text of the link must indicate that
 *    the website's Questions/Answers functionality is powered by lampcms.com
 *    An example of acceptable link would be "Powered by <a href="http://www.lampcms.com">LampCMS</a>"
 *    The location of the link is not important, it can be in the footer of the page
 *    but it must not be hidden by style attibutes
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This product includes GeoLite data created by MaxMind,
 *  available from http://www.maxmind.com/
 *
 *
 * @author     Dmitri Snytkine <cms@lampcms.com>
 * @copyright  2005-2011 (or current year) ExamNotes.net inc.
 * @license    http://www.gnu.org/licenses/lgpl-3.0.txt GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * @link       http://www.lampcms.com   Lampcms.com project
 * @version    Release: @package_version@
 *
 *
 */


namespace Lampcms;

use \PDO;

/**
 * Parser of title of one question
 * title is tokenized and array is stored
 * in QUESTION_TITLE_TAGS
 *
 * @author Dmitri Snytkine
 *
 */
class Qtitletags extends LampcmsObject
{

	protected $coll;

	protected $tokenizer;

	public function __construct(Registry $oRegistry){
		$this->oRegistry = $oRegistry;
		$this->coll = $oRegistry->Mongo->getCollection('QUESTION_TITLE_TAGS');
		$this->coll->ensureIndex(array('tags' => 1));
		$this->tokenizer = new Tokenizer();
	}

	/**
	 * Parse title of the question by
	 * tokenizing it and then insert array of
	 * tokens (words from title)
	 * into QUESTION_TITLE_TAGS collection
	 * using question's _id as value for _id in QUESTION_TITLE_TAGS
	 *
	 *
	 * @param Question $oQuestion
	 * @return object $this;
	 */
	public function parse(Question $oQuestion){

		$title = $oQuestion->offsetGet('title');
		$aTags = $this->tokenizer->tokenize($title);
		$aTags = array_unique($aTags);
		if(!empty($aTags)){
			$aData = array('_id' => $oQuestion['_id'], 'url' => $oQuestion['url'], 'title' => $title, 'tags' => $aTags);
			try{
				$this->coll->insert($aData);
				d('added title tags: '.print_r($aTags, 1).' for question '.$oQuestion['_id']);
			} catch (\MongoException $e){
				e('Unable to insert data: '.print_r($aData, 1).' into QUESTION_TITLE_TAGS collection: '.$e->getMessage());
			}
		}

		/**
		 * Now add to mysql to make
		 * use of full text index
		 */
		$this->indexTitle($oQuestion);

		return $this;
	}

	/**
	 * Record title, intro, qid, url, date
	 * into QUESTIONS_TITLE mysql table
	 * the purpose of this is to use
	 * full-text index capabilities
	 * of MYSQL on the question title,
	 * so we can easily find 'similar'
	 * questions based on titles and can
	 * also use this for site search feature
	 * to some extent. Cool
	 *
	 * @param Question $oQuestion
	 */
	public function indexTitle(Question $oQuestion){
		if(!extension_loaded('pdo_mysql')){
			d('pdo_mysql not loaded ');

			return $this;
		}

		$res = false;
		$qid = $oQuestion->offsetGet('_id');
		$title = $oQuestion->offsetGet('title');
		$url = $oQuestion->offsetGet('url');
		$intro = $oQuestion->offsetGet('intro');
		$date = date('F j, Y', $oQuestion->offsetGet('i_ts'));

		d($qid.' title: '. $title. ' url: '. $url.' intro: '.$intro.' date: '.$date);

		$sql = 'INSERT INTO question_title
		(
		qid, 
		q_title, 
		q_url, 
		q_intro, 
		q_date)
		VALUES (
		:qid, 
		:qtitle, 
		:qurl, 
		:qintro, 
		:qdate)';

		try{
			$sth = $this->oRegistry->Db->makePrepared($sql);
			$sth->bindParam(':qid', $qid, PDO::PARAM_INT);
			$sth->bindParam(':qtitle', $title, PDO::PARAM_STR);
			$sth->bindParam(':qurl', $url, PDO::PARAM_STR);
			$sth->bindParam(':qintro', $intro, PDO::PARAM_STR);
			$sth->bindParam(':qdate', $date, PDO::PARAM_STR);

			$res = $sth->execute();
		} catch (\Exception $e){

			$err = ('Exception: '.get_class($e).' Unable to insert into mysql because: '.$e->getMessage().' Err Code: '.$e->getCode().' trace: '.$e->getTraceAsString());
			d('mysql error: '.$err);

			if('42S02' === $e->getCode()){
				if(true === TitleTagsTable::create($this->oRegistry)){
					$this->indexTitle($oQuestion);
				}
			} else {
				throw $e;
			}

		}
		d('res: '.$res);

		return $this;
	}
}
