<?php
/**
 *
 * License, TERMS and CONDITIONS
 *
 * This software is lisensed under the GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * Please read the license here : http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * ATTRIBUTION REQUIRED
 * 4. All web pages generated by the use of this software, or at least
 * 	  the page that lists the recent questions (usually home page) must include
 *    a link to the http://www.lampcms.com and text of the link must indicate that
 *    the website's Questions/Answers functionality is powered by lampcms.com
 *    An example of acceptable link would be "Powered by <a href="http://www.lampcms.com">LampCMS</a>"
 *    The location of the link is not important, it can be in the footer of the page
 *    but it must not be hidden by style attibutes
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This product includes GeoLite data created by MaxMind,
 *  available from http://www.maxmind.com/
 *
 *
 * @author     Dmitri Snytkine <cms@lampcms.com>
 * @copyright  2005-2011 (or current year) ExamNotes.net inc.
 * @license    http://www.gnu.org/licenses/lgpl-3.0.txt GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * @link       http://www.lampcms.com   Lampcms.com project
 * @version    Release: @package_version@
 *
 *
 */


namespace Lampcms;

use \PDO;
/**
 * Creates html of 'similar mailing list items'
 * for one new question
 *
 * This can be run onNewQuestion, so it will be run AFTER
 * question has already been inserted in MONGO, and
 * after creating similar items html it will re-save
 * the object to mongo.
 *
 * This way the function can run as registered shutdown function
 * so script can return output to browser and then update question
 * AFTER user gets the result back. Since there will be a couple
 * of seconds delay during meta redirect, user will most likely
 * See the question complete with the similar items by the time
 * browser actually redirects user to the question.
 *
 * @author Dmitri Snytkine
 *
 */
class SimilarItems extends LampcmsObject
{
	protected $title;

	protected $qid = 0;

	protected $oQuestion;

	protected $threadID = 1;


	public function __construct(Registry $oRegistry){
		$this->oRegistry = $oRegistry;
	}

	/**
	 * This method is called during parsing
	 * of new question, in which case 2 separate
	 * fields are added to oQuestion object:
	 * one for similar threads and one for similar questions
	 *
	 *
	 * @param clsQuestion $oQuestion
	 */
	public function parse(Question $oQuestion){
		$this->oQuestion = $oQuestion;
		$this->title = $oQuestion['title'];
		$this->qid = $oQuestion['_id'];
		d('$this->title: '.$this->title);

		$this->getSimilarQuestions();
	}


	/**
	 * Get array of up to 30
	 * similar questions, create html block from
	 * these questions and save in oQuestion
	 * under the sim_q key
	 *
	 * @return object $this
	 *
	 */
	protected function getSimilarQuestions($limit = 30, $ret = false){

		$qid = (int)$this->oQuestion['_id'];
		$html = '';

		$sql = "SELECT *
				FROM QUESTION_TITLE
				WHERE 
				qid != :qid
 				AND 
				MATCH (q_title)
				AGAINST (:subj)
				LIMIT $limit";

		d('$sql: '.$sql);
		$sth = $this->oRegistry->Db->makePrepared($sql);
		$sth->bindParam(':qid', $this->qid, PDO::PARAM_INT);
		$sth->bindParam(':subj', $this->title, PDO::PARAM_STR);
		$sth->execute();
		$aRes = $sth->fetchAll();
		d('found '.count($aRes).' similar questions '.print_r($aRes, 1));
		//$tpl = ($ret) ? '\\tplSimquestions2' : '\\tplSimquestions';
		//$html = (!empty($aRes)) ? $tpl::loop($aRes) : '';
		if(!empty($aRes)){
			if($ret){
				$html = \tplSimquestions2::loop($aRes);
			} else {
				$html = \tplSimquestions::loop($aRes);
			}
		}
		
		if($ret){
			d('returning html for similar questions: '.$html);
			return $html;
		}

		if(!empty($aRes)){
			$s = '<div id="sim_questions" class="similars">'.$html.'</div>';
			$this->oQuestion->offsetSet('sim_q', $s);
		}

		return $this;
	}

}
