<?php
/**
 *
 * License, TERMS and CONDITIONS
 *
 * This software is lisensed under the GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * Please read the license here : http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * ATTRIBUTION REQUIRED
 * 4. All web pages generated by the use of this software, or at least
 * 	  the page that lists the recent questions (usually home page) must include
 *    a link to the http://www.lampcms.com and text of the link must indicate that
 *    the website\'s Questions/Answers functionality is powered by lampcms.com
 *    An example of acceptable link would be "Powered by <a href="http://www.lampcms.com">LampCMS</a>"
 *    The location of the link is not important, it can be in the footer of the page
 *    but it must not be hidden by style attibutes
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This product includes GeoLite data created by MaxMind,
 *  available from http://www.maxmind.com/
 *
 *
 * @author     Dmitri Snytkine <cms@lampcms.com>
 * @copyright  2005-2011 (or current year) ExamNotes.net inc.
 * @license    http://www.gnu.org/licenses/lgpl-3.0.txt GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * @link       http://www.lampcms.com   Lampcms.com project
 * @version    Release: @package_version@
 *
 *
 */


namespace Lampcms\Api\v1;


use \Lampcms\SubmittedQuestionWWW;
use \Lampcms\Utf8String;

/**
 * Object of this class represents data
 * of a question submitted via an API
 * This is not a Question object, only a submitted
 * data. The program may reject this question
 * if it does not validate for any reason and this data
 * may never become an actual question.
 *
 * @author Dmitri Snytkine
 *
 */
class SubmittedQuestion extends SubmittedQuestionWWW
{

	protected $appName;

	protected $appId;

	public function __construct(\Lampcms\Registry $oRegistry){
		$this->oRegistry = $oRegistry;
		$this->aData = $oRegistry->Request->getArray();
		d('$this->aData: '.print_r($this->aData, 1));
		$this->oUser = $oRegistry->Viewer;
	}



	/**
	 * Get name of app used for submitting
	 * this question
	 * @return string
	 */
	public function getApp(){
		return $this->oRegistry->appName;
	}


	/**
	 * Get id of app used for submitting
	 * this question
	 * @return null
	 */
	public function getAppId(){
		return $this->oRegistry->clientAppId;
	}


	/**
	 * Get id of link to app used for submitting
	 * this question
	 *
	 * @return null
	 */
	public function getAppLink(){
		$name = $this->oRegistry->appName;
		$id = $this->oRegistry->clientAppId;

		return (!empty($id) && !empty($name)) ? \sprintf('<a href="/app/%s" rel="nofollow" target="_blank">%s</a>', $id, $name) : null;

	}

	
	/**
	 * Unlike normal WWW request, 
	 * In API call we may not have 'tags' in Request,
	 * so we need to fallback to default empty string here
	 *
	 * (non-PHPdoc)
	 * @see Lampcms.SubmittedQuestionWWW::getUtf8Tags()
	 */
	public function getUtf8Tags(){
		if(!isset($this->oTags)){
				
			$tags = $this->oRegistry->Request->get('tags', 's', '');
			$this->oTags = Utf8String::factory($tags);
		}

		return $this->oTags;
	}

}
