<?php
/**
 *
 * License, TERMS and CONDITIONS
 *
 * This software is lisensed under the GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * Please read the license here : http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * ATTRIBUTION REQUIRED
 * 4. All web pages generated by the use of this software, or at least
 * 	  the page that lists the recent questions (usually home page) must include
 *    a link to the http://www.lampcms.com and text of the link must indicate that
 *    the website\'s Questions/Answers functionality is powered by lampcms.com
 *    An example of acceptable link would be "Powered by <a href="http://www.lampcms.com">LampCMS</a>"
 *    The location of the link is not important, it can be in the footer of the page
 *    but it must not be hidden by style attibutes
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This product includes GeoLite data created by MaxMind,
 *  available from http://www.maxmind.com/
 *
 *
 * @author     Dmitri Snytkine <cms@lampcms.com>
 * @copyright  2005-2011 (or current year) ExamNotes.net inc.
 * @license    http://www.gnu.org/licenses/lgpl-3.0.txt GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * @link       http://www.lampcms.com   Lampcms.com project
 * @version    Release: @package_version@
 *
 *
 */


namespace Lampcms;

/**
 * Static class
 * Purpose is to parse array of tags
 * that user submitted via Question or Retag form
 *
 *
 *
 * The reason this is a separate class is because
 * it is used in 2 different classes : QuestionParser
 * and Retag
 *
 * @author Dmitri Snytkine
 *
 */
class TagsNormalizer
{
	/**
	 *
	 * Parse array of user-submitted tags
	 * to remove html tags, convert to lower case,
	 * remove duplicates and sort alphabetically
	 *
	 * @param object of type Utf8String
	 *
	 * @return array parsed tags - nice and clean
	 */
	public static function parse(Utf8String $Tags){

		mb_internal_encoding('UTF-8');
		mb_regex_encoding('UTF-8');

		$sTags = $Tags->toLowerCase()->stripTags()->valueOf();
		d('sTags: '.$sTags);
		$sTags = mb_ereg_replace("[,;]"," ",$sTags);
		d('sTags now: '.$sTags);
		

		/**
		 * Using mb_split instead of explode
		 * is much better because it
		 * will split on multiple spaces, not
		 * just on one space which means we
		 * don't have to run each tag through trim()
		 */
		$aTags = mb_split("\s+", $sTags);
		d('aTags now: '.print_r($aTags ,1));

		/**
		 * Removes potentially empty values but...
		 * is it utf8 safe?
		 * I think it is safe when no extra params are given
		 * as it consideres empty values to be 0, empty string
		 * or null and these are safe in utf-8, meaning
		 * these cannot be part of utf-8 char
		 *
		 */
		$aTags = array_filter($aTags);
		$aTags = array_unique($aTags);
		d('aTags after filter and unique: '.print_r($aTags, 1));

		/**
		 * It is important to sort the
		 * array of tags so that
		 * we can spot the 'same' tags
		 * during the creation of 'hash'
		 * This way the order of tags users lists
		 * in tags form is not important - they will
		 * be sorted alphabetically
		 */
		sort($aTags, SORT_STRING);

		return $aTags;
	}
}
